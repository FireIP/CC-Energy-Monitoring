--[[Server-OS by FireIP
	Version 0.1
	Changes:
	none]]


term.clear()
term.setCursorPos(1,1)
print("Server-OS (v0.1)")

print("Startup [1/3]")
print("Initialising [...]")

--Functions

function connect()
	event = {os.pullEvent("modem_message")}
	if event[5] == "ping" then
		print("Recived a ping!")

		a.transmit(22,20,"listening")
		event = {os.pullEvent("modem_message")}
		if event[5] == "copy" then
			print("Connected!")

			parallel.waitForAny(sendData,connect)
		end

	end
end

function sendData()
	print("Sending data.")
	while true do
		me = m.getNetworkEnergyStored()
		mev = math.modf(me)
		mep = (me/1610000)*100
		mepv = math.modf(mep)

		md = {me=me,mev=mev,mep=mep,mepv=mepv}
		
		D = {"data",ME=md}

		a.transmit(22,20,D)
	end
end

--Programm stuff



a = peripheral.find("modem")
if not a then
	error("Wireless modem not found.",0)
end
a.closeAll()
a.open(20)

m = peripheral.find("meBridge")
if not m then
	error("ME Bridge not found.",0)
end

term.setCursorPos(1,3)
term.clearLine()
print("Initialising [done]")

connect()




--while true do
--	parallel.waitForAny(senden)
--end






-- term.setCursorPos(1,2)
-- term.clearLine()
-- print("Startup [2/3]")





-- print("Constructing HUD [...]")

-- h.add()
-- h.drawString("Energy:",10,10,-1,true)
-- h.sync()

-- term.setCursorPos(1,3)
-- term.clearLine()
-- print("Constructing HUD [done]")

-- term.setCursorPos(1,2)
-- term.clearLine()
-- print("Running...")
-- term.setCursorPos(1,3)
-- term.clearLine()

-- while true do
--   h.drawString("Energy:",10,10,-1,true)
--   me = m.getNetworkEnergyStored()
--   mev = math.modf(me)
--   mep = (me/1610000)*100
--   mepv = math.modf(mep)
  
--   mes = "Me-System: " .. mev .. " AE" .. " (" .. mepv .. "%)"
--   h.drawString(mes,10,20,-1,true)
--   h.sync()
-- end
